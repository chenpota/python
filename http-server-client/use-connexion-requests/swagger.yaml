swagger: '2.0'

info:
  title: Player API
  version: '1.0.0'

produces:
  - application/json

paths:
  /players:
    get:
      operationId: api.get_players
      responses:
        200:
          description: Query players
          schema:
            type: object
            items:
              $ref: '#/definitions/Players'
    post:
      operationId: api.create_player
      responses:
        200:
          description: Return new player
          schema:
            type: object
            items:
              $ref: '#/definitions/Player'
  /players/{pid}:
    get:
      operationId: api.get_player
      parameters:
        - $ref: '#/parameters/player_id'
      responses:
        200:
          description: Query specific player
          schema:
            type: object
            items:
              $ref: '#/definitions/Player'
        404:
          description: Specific player is not found
    delete:
      operationId: api.delete_player
      parameters:
        - $ref: '#/parameters/player_id'
      responses:
        200:
          description: Remove specific player
          schema:
            type: object
            items:
              $ref: '#/definitions/Player'
        404:
          description: Specific player is not found
    put:
      operationId: api.replace_player
      parameters:
        - $ref: '#/parameters/player_id'
      responses:
        200:
          description: Replace specific player
          schema:
            type: object
            items:
              $ref: '#/definitions/Player'
        404:
          description: Specific player is not found
    patch:
      operationId: api.update_player
      parameters:
        - $ref: '#/parameters/player_id'
      responses:
        200:
          description: Update specific player
          schema:
            type: object
            items:
              $ref: '#/definitions/Player'
        404:
          description: Specific player is not found

parameters:
  player_id:
    name: pid
    in: path
    type: integer
    required: true

definitions:
  Players:
    type: object
    required:
      - players
    properties:
      players:
        type: array
        items:
          $ref: '#/definitions/Player'
  Player:
    type: object
    required:
      - pid
      - name
      - score
    properties:
      pid:
        type: integer
        minimum: 0
      name:
        type: string
      score:
        type: integer
        minimum: 0
